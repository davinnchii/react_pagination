{"version":3,"sources":["App.tsx","components/Pagination/Pagination.tsx","utils.ts","index.tsx"],"names":["DefaultPageValues","Pagination","total","perPage","currentPage","onPageChange","itemsArr","pagesCount","Math","round","totalPages","Array","fill","map","_","index","firstPageIsActive","lastPageIsActive","className","cn","disabled","href","onClick","pageNumber","active","length","item","items","from","to","numbers","n","push","getNumbers","App","useState","startPage","setCurrentPage","defaultPageSize","setPerPage","firstPageIndex","lastPageIndex","console","log","currentTableData","useMemo","slice","id","defaultValue","onChange","event","Number","currentTarget","value","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1078aca4.chunk.js","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nenum DefaultPageValues {\n  startPage = 1,\n  defaultPageSize = 5,\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(DefaultPageValues.startPage);\n  const [perPage, setPerPage] = useState(DefaultPageValues.defaultPageSize);\n  const firstPageIndex = (currentPage - 1) * perPage;\n  const lastPageIndex = firstPageIndex + perPage < items.length\n    ? firstPageIndex + perPage\n    : items.length;\n\n  // eslint-disable-next-line no-console\n  console.log(firstPageIndex, lastPageIndex, perPage);\n\n  const currentTableData = useMemo(() => {\n    return items.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage, perPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstPageIndex + 1} - ${lastPageIndex} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={5}\n            onChange={(event) => {\n              setPerPage(Number(event?.currentTarget.value));\n              setCurrentPage(DefaultPageValues.startPage);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(pageNumber: number) => setCurrentPage(pageNumber)}\n        itemsArr={currentTableData}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (pageNumber: number) => void;\n  itemsArr: string[],\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n  itemsArr,\n}) => {\n  const pagesCount = Math.round(total % perPage) === 0\n    ? Math.round(total / perPage)\n    : Math.round(total / perPage) + 1;\n  const totalPages: number[] = new Array(pagesCount)\n    .fill(null).map((_, index: number) => index + 1);\n\n  const firstPageIsActive = currentPage === 1;\n  const lastPageIsActive = currentPage === pagesCount;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', { disabled: currentPage === 1 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1\n              ? 'true'\n              : 'false'}\n            onClick={() => {\n              if (!firstPageIsActive) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        {totalPages.map((pageNumber: number) => (\n          <li\n            className={cn('page-item',\n              { active: currentPage === pageNumber })}\n            key={pageNumber}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${pageNumber}`}\n              onClick={() => {\n                onPageChange(pageNumber);\n              }}\n            >\n              {pageNumber}\n            </a>\n          </li>\n        ))}\n        <li className={cn('page-item',\n          { disabled: currentPage === totalPages.length })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === totalPages.length\n              ? 'true'\n              : 'false'}\n            onClick={() => {\n              if (!lastPageIsActive) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {itemsArr.map((item) => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\r\n  const numbers = [];\r\n\r\n  for (let n = from; n <= to; n += 1) {\r\n    numbers.push(n);\r\n  }\r\n\r\n  return numbers;\r\n}\r\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}